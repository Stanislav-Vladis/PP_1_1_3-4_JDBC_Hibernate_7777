package jm.task.core.jdbc;





        //Требования к классам приложения:

        //Классы dao/service должны реализовывать соответствующие интерфейсы ОК
        //Класс dao должен иметь конструктор пустой/по умолчанию ОК
        //Все поля должны быть private
        //service переиспользует методы dao
        //Обработка всех исключений, связанных с работой с базой данных должна находиться в dao
        //Класс Util должен содержать логику настройки соединения с базой данных


         //Необходимые операции:

         //Создание таблицы для User(ов) – не должно приводить к исключению, если такая таблица уже существует
         //Удаление таблицы User(ов) – не должно приводить к исключению, если таблицы не существует
         //Очистка содержания таблицы
         //Добавление User в таблицу
         //Удаление User из таблицы ( по id )
         //Получение всех User(ов) из таблицы


         //Алгоритм работы приложения:
         //В методе main класса Main должны происходить следующие операции:

         //Создание таблицы User(ов)
         //Добавление 4 User(ов) в таблицу с данными на свой выбор. После каждого добавления должен быть вывод в консоль ( User с именем – name добавлен в базу данных )
         //Получение всех User из базы и вывод в консоль ( должен быть переопределен toString в классе User)
         //Очистка таблицы User(ов)
         //Удаление таблицы


import jm.task.core.jdbc.util.Util;

import java.sql.Connection;
import java.sql.SQLException;

public class Main {

    public static void main(String[] args) throws SQLException {
        // реализуйте алгоритм здесь
        //Получаем соединение с БД
        Util util = new Util("root IDEA", "password", "jdbc:mysql://localhost:3306/kata_preproject_bd");
        Connection connection = util.getConnection();



    }

}
